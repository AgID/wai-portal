version: 2.1

commands:
  restore_all_caches:
    description: Restore php and javascript dependencies
    steps:
      - restore_cache:
          keys:
          - v1-php-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-php-

      - restore_cache:
          keys:
          - v1-node-{{ checksum "package-lock.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-node-

  composer:
    description: Ensure all php dependencies are installed
    steps:
      - run:
          name: Run composer install
          command: composer install -n --ignore-platform-reqs --no-progress

  php-cs-fixer:
    description: Ensure php code follows style rules
    steps:
      - run:
          name: Run php-cs-fixer (future mode)
          command: |
            PHP_CS_FIXER_FUTURE_MODE=1
            bin/php-cs-fixer fix --dry-run || (echo "Coding standards are not respected. Run PHP-CS-Fixer to fix." && exit 1)

  npm:
    description: Ensure all javascript dependencies are installed
    steps:
      - run:
          name: Install node version defined in .node-version
          command: |
            git clone https://github.com/nodenv/node-build.git ../node-build
            sudo ../node-build/install.sh
            sudo node-build $(cat .node-version) /usr/local

      - run:
          name: Install npm dependencies
          command: npm install --silent

  save_all_caches:
    description: Save php and javascript dependencies
    steps:
      - save_cache:
          paths:
            - ./vendor
          key: v1-php-{{ checksum "composer.json" }}

      - save_cache:
          paths:
            - ./node_modules
          key: v1-node-{{ checksum "package.json" }}

  store_test_artifacts:
    description: Save artifacts from tests for debug purposes
    steps:
      - store_artifacts:
          path: tests/Browser/console
          destination: browser-tests/console

      - store_artifacts:
          path: tests/Browser/screenshots
          destination: browser-tests/screenshots

      - store_artifacts:
          path: clover.xml
          destination: unit-tests/coverage

jobs:
  build_and_test:
    docker:
      - image: circleci/php:7.2-cli
    environment:
      - APP_ENV: "testing"
    steps:
      - checkout
      - restore_all_caches
      - composer
      - php-cs-fixer
      - npm
      - save_all_caches
      - setup_remote_docker
      # build
      - run:
          name: Run build task
          command: bin/phing build
      # test
      - run:
          name: Run phpunit and dusk tests
          command: bin/phing test
      - store_test_artifacts

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test
